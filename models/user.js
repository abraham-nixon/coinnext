// Generated by CoffeeScript 1.6.3
(function() {
  var User, UserSchema, crypto, exports;

  crypto = require("crypto");

  UserSchema = new Schema({
    email: {
      type: String,
      index: {
        unique: true
      }
    },
    password: {
      type: String
    },
    created:  ({
      type: Date ,
      "default": Date.now ,
      index: true
    })
  });

  UserSchema.set("autoIndex", false);

  UserSchema.pre("save", function(next) {
    this.password = User.hashPassword(this.password);
    return next();
  });

  UserSchema.statics.hashPassword = function(password) {
    return crypto.createHash("sha1").update("" + password + (GLOBAL.appConfig().salt), "utf8").digest("hex");
  };

  UserSchema.methods.isValidPassword = function(password) {
    return this.password === User.hashPassword(password);
  };

  User = mongoose.model("User", UserSchema);

  exports = module.exports = User;

}).call(this);
